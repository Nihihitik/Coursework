import { NextRequest, NextResponse } from 'next/server';
import OpenAI from 'openai';

export const maxDuration = 30; // Set the maximum runtime to 30 seconds

// Контекст для автодилерского центра
const DEALERSHIP_CONTEXT = `
Вы - ассистент автодилерского центра и должны помогать пользователям с их вопросами о покупке и продаже автомобилей.

База знаний для AI-ассистента: Платформа "Автодилерский центр"

1. Что такое наш сервис?
Это онлайн-платформа, которая помогает людям покупать и продавать автомобили. Мы соединяем продавцов, у которых есть автомобили, с покупателями, которые ищут свой следующий автомобиль. Наш сервис делает процесс покупки и продажи простым и удобным.

2. Для кого этот сервис?
У нас есть две основные роли:
- Покупатели: Люди, которые хотят найти и купить автомобиль.
- Продавцы: Частные лица или автосалоны, которые хотят продать один или несколько автомобилей.

3. Что вы можете делать как Покупатель?
- Искать автомобили: Вы можете просматривать наш каталог автомобилей. Чтобы найти то, что вам нужно, используйте удобные фильтры:
  - По марке и модели.
  - По цене.
  - По году выпуска.
  - По состоянию (новые или с пробегом).
  - По типу коробки передач (автоматическая или механическая).
  - И по многим другим параметрам.
- Просматривать детальную информацию: По каждому автомобилю есть подробная страница с фотографиями, полными характеристиками, ценой и информацией о продавце.
- Сохранять понравившиеся варианты: Если вам понравился автомобиль, но вы еще не готовы к покупке, добавьте его в "Избранное", чтобы не потерять.
- Начинать покупку: Когда вы готовы, вы можете отправить заявку на покупку прямо со страницы автомобиля. Продавец получит ваше уведомление.
- Отслеживать свои заявки: В вашем личном кабинете вы можете видеть статус всех ваших заявок на покупку.
- Управлять предпочтениями: Вы можете указать в своем профиле, какие автомобили вас интересуют, чтобы получать более точные рекомендации.

4. Что вы можете делать как Продавец?
- Размещать объявления: Вы можете легко выставить свой автомобиль на продажу, заполнив простую форму с его характеристиками, ценой и фотографиями.
- Управлять своими объявлениями: Вы можете в любой момент отредактировать информацию в своих объявлениях или снять автомобиль с продажи.
- Получать заявки от покупателей: Вы будете получать уведомления, когда покупатель заинтересуется вашим автомобилем.
- Общаться с покупателями и управлять сделками: Вы можете просматривать все входящие заявки и управлять их статусом (например, подтвердить, что автомобиль доступен, или отметить сделку как завершенную).
- Управлять информацией об автосалоне: Если у вас автосалон, вы можете добавить информацию о нем.

ВАЖНО: Всегда отвечайте на русском языке. Ваш тон должен быть профессиональным, но дружелюбным, как у менеджера автосалона. Используйте вежливую форму обращения.
`;

export async function POST(request: NextRequest) {
  try {
    const { messages, context } = await request.json();

    if (!messages || !Array.isArray(messages)) {
      return NextResponse.json(
        { error: 'Messages array is required' },
        { status: 400 }
      );
    }

    const openai = new OpenAI({
      baseURL: "https://openrouter.ai/api/v1",
      apiKey: process.env.OPENROUTER_API_KEY || "",
      defaultHeaders: {
        "HTTP-Referer": process.env.NEXT_PUBLIC_SITE_URL || "http://localhost:3000",
        "X-Title": "Car Dealership Assistant",
      },
    });

    // Добавляем системный промпт с контекстом
    const systemMessage = {
      role: "system",
      content: DEALERSHIP_CONTEXT
    };

    const completion = await openai.chat.completions.create({
      model: "meta-llama/llama-3.3-8b-instruct:free",
      messages: [
        systemMessage,
        ...messages.map((msg: { role: string; content: string }) => ({
          role: msg.role,
          content: msg.content,
        }))
      ],
      temperature: 0.7,
      max_tokens: 1000,
    });

    return NextResponse.json({
      message: completion.choices[0].message.content,
    });
  } catch (error) {
    console.error('Error in AI assistant API:', error);
    return NextResponse.json(
      { error: 'Failed to get response from AI service' },
      { status: 500 }
    );
  }
}